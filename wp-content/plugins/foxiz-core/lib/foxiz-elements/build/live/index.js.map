{"version":3,"file":"live/index.js","mappings":"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","sources":["webpack://foxiz-elements/./src/live/edit.js","webpack://foxiz-elements/./src/live/save.js","webpack://foxiz-elements/external window [\"wp\",\"blockEditor\"]","webpack://foxiz-elements/external window [\"wp\",\"blocks\"]","webpack://foxiz-elements/external window [\"wp\",\"components\"]","webpack://foxiz-elements/external window [\"wp\",\"coreData\"]","webpack://foxiz-elements/external window [\"wp\",\"date\"]","webpack://foxiz-elements/external window [\"wp\",\"element\"]","webpack://foxiz-elements/external window [\"wp\",\"i18n\"]","webpack://foxiz-elements/webpack/bootstrap","webpack://foxiz-elements/webpack/runtime/compat get default export","webpack://foxiz-elements/webpack/runtime/define property getters","webpack://foxiz-elements/webpack/runtime/hasOwnProperty shorthand","webpack://foxiz-elements/webpack/runtime/make namespace object","webpack://foxiz-elements/./src/live/index.js"],"sourcesContent":["import {__, _x} from '@wordpress/i18n';\nimport {useEntityProp} from '@wordpress/core-data';\nimport {useEffect} from '@wordpress/element';\nimport {dateI18n, getDate, getSettings as getDateSettings} from '@wordpress/date';\nimport {\n    __experimentalBoxControl as BoxControl,\n    BaseControl,\n    Button,\n    Dashicon,\n    Dropdown,\n    PanelBody,\n    PanelRow,\n    RangeControl,\n    SelectControl,\n    Tip,\n    ToggleControl\n} from '@wordpress/components';\n\nimport {\n    __experimentalPublishDateTimePicker as PublishDateTimePicker,\n    InnerBlocks,\n    InspectorControls,\n    PanelColorSettings,\n    useBlockProps,\n} from '@wordpress/block-editor';\n\nexport default function Edit(props) {\n    const {attributes, setAttributes} = props;\n    const {\n        liveDate,\n        shadow,\n        borderStyle,\n        borderColor,\n        darkBorderColor,\n        borderWidth,\n        borderRadius,\n        buttonBorderRadius,\n        background,\n        darkBackground,\n        desktopPadding,\n        tabletPadding,\n        mobilePadding\n    } = attributes;\n    const dateSettings = getDateSettings();\n\n    const setAttribute = (name, value) => {\n        setAttributes({[name]: value});\n    };\n\n    const setDate = (newDate) => {\n        setAttribute('liveDate', getDate(newDate));\n    };\n\n    const [siteTimeFormat = dateSettings.formats.time] = useEntityProp(\n        'root',\n        'site',\n        'time_format'\n    );\n\n    const borderStyleOptions = [\n        {label: __('None'), value: 'none'},\n        {label: __('Solid'), value: 'solid'},\n        {label: __('Dashed'), value: 'dashed'},\n        {label: __('Dotted'), value: 'dotted'},\n        {label: __('Double'), value: 'double'},\n    ];\n\n    let wrapperClassName = `live-card-outer`;\n    let innerClassName = `live-card gb-wrap`;\n    if (shadow) {\n        innerClassName += ` yes-shadow`;\n    }\n\n    const blockProps = useBlockProps({\n        className: wrapperClassName,\n    });\n\n    useEffect(() => {\n        if (!liveDate) {\n            setDate(null);\n        }\n    }, []);\n\n    return (\n        <div {...blockProps}>\n            <InspectorControls>\n                <PanelBody title={__('Details')} initialOpen={true}>\n                    <PanelRow className=\"edit-post-post-schedule\">\n                        <span>{__('Event DateTime')}</span>\n                        <Dropdown\n                            className=\"edit-post-post-schedule\"\n                            popoverProps={{placement: 'bottom-end'}}\n                            renderToggle={({isOpen, onToggle}) => (\n                                <Button\n                                    variant=\"tertiary\"\n                                    className=\"edit-post-post-schedule__toggle\"\n                                    onClick={onToggle}\n                                    aria-expanded={isOpen}\n                                >{getFullDateLabel(liveDate, dateSettings)}\n                                </Button>\n                            )}\n                            renderContent={({onClose}) => (\n                                <PublishDateTimePicker\n                                    currentDate={liveDate}\n                                    onChange={setDate}\n                                    is12Hour={is12HourFormat(siteTimeFormat)}\n                                />\n                            )}\n                        />\n                    </PanelRow>\n                </PanelBody>\n            </InspectorControls>\n            <InspectorControls group=\"styles\">\n                <PanelBody title={__('Border & Shadow')} initialOpen={false}>\n                    <SelectControl\n                        label={__('Border Style')}\n                        value={borderStyle}\n                        options={borderStyleOptions}\n                        onChange={(value) => setAttribute('borderStyle', value)}\n                        help={__('Please select the border color to see the border if you enable it.')}\n                    />\n                    {borderStyle && borderStyle !== 'none' && (\n                        <>\n                            <BoxControl\n                                resetValues={{top: null, right: null, bottom: null, left: null}}\n                                label={__('Border Width')}\n                                values={borderWidth}\n                                onChange={(value) => setAttribute('borderWidth', value)}\n                            />\n                            <PanelColorSettings\n                                title={__('Border Color')}\n                                colorSettings={[\n                                    {\n                                        value: borderColor,\n                                        onChange: (value) => setAttribute('borderColor', value),\n                                        label: __('Color'),\n                                    },\n                                    {\n                                        value: darkBorderColor,\n                                        onChange: (value) => setAttribute('darkBorderColor', value),\n                                        label: __('Dark Mode - Color'),\n                                    },\n                                ]}\n                            />\n                        </>\n                    )}\n                    <RangeControl\n                        label={__('Border Radius')}\n                        value={borderRadius}\n                        onChange={(value) => setAttribute('borderRadius', value)}\n                        step={1}\n                        max={100}\n                        min={0}\n                    />\n                    <ToggleControl\n                        label={__('Shadow')}\n                        checked={shadow}\n                        onChange={(value) => setAttribute('shadow', value)}\n                    />\n                    <PanelColorSettings\n                        title={__('Background')}\n                        colorSettings={[\n                            {\n                                value: background,\n                                onChange: (value) => setAttribute('background', value),\n                                label: __('Background'),\n                            },\n                            {\n                                value: darkBackground,\n                                onChange: (value) => setAttribute('darkBackground', value),\n                                label: __('Dark Mode - Background'),\n                            },\n                        ]}\n                    />\n                </PanelBody>\n                <PanelBody title={__('Inner Padding')} initialOpen={false}>\n                    <BaseControl><Tip>{__('These settings will apply to block wrapper. Click outside to see the update!')}</Tip></BaseControl>\n                    <div className=\"res-padding-control\">\n                        <BoxControl\n                            resetValues={{top: '30px', right: '30px', bottom: '30px', left: '30px'}}\n                            label={<><Dashicon icon=\"desktop\"/> {__('Desktop')}</>}\n                            values={desktopPadding}\n                            onChange={(value) => setAttribute('desktopPadding', value)}\n                        />\n                        <BoxControl\n                            resetValues={{top: '25px', right: '25px', bottom: '25px', left: '25px'}}\n                            label={<><Dashicon icon=\"tablet\"/> {__('Tablet')}</>}\n                            values={tabletPadding}\n                            onChange={(value) => setAttribute('tabletPadding', value)}\n                        />\n                        <BoxControl\n                            resetValues={{top: '20px', right: '20px', bottom: '20px', left: '20px'}}\n                            label={<><Dashicon icon=\"smartphone\"/> {__('Mobile')}</>}\n                            values={mobilePadding}\n                            onChange={(value) => setAttribute('mobilePadding', value)}\n                        />\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n            <div className=\"live-datetime meta-text\">\n                <span className=\"live-datetime-dot\"></span>\n                <strong className=\"live-hdate meta-bold\">{getFullDateLabel(liveDate, dateSettings)}</strong>\n            </div>\n            <div className={innerClassName} style={{\n                ...(borderStyle && {'--border-style': borderStyle}),\n                ...(borderRadius && {'--border-radius': `${borderRadius}px`}),\n                ...(borderWidth && {'--border-width': `${borderWidth.top || 0} ${borderWidth.right || 0} ${borderWidth.bottom || 0} ${borderWidth.left || 0}`}),\n                ...(borderColor && {'--border-color': borderColor}),\n                ...(darkBorderColor && {'--dark-border-color': darkBorderColor}),\n                ...(buttonBorderRadius && {'--button-border-radius': `${buttonBorderRadius}px`}),\n                ...(background && {'--bg': background}),\n                ...(darkBackground && {'--dark-bg': darkBackground}),\n                ...(desktopPadding && {'--desktop-padding': `${desktopPadding.top || 0} ${desktopPadding.right || 0} ${desktopPadding.bottom || 0} ${desktopPadding.left || 0}`}),\n                ...(tabletPadding && {'--tablet-padding': `${tabletPadding.top || 0} ${tabletPadding.right || 0} ${tabletPadding.bottom || 0} ${tabletPadding.left || 0}`}),\n                ...(mobilePadding && {'--mobile-padding': `${mobilePadding.top || 0} ${mobilePadding.right || 0} ${mobilePadding.bottom || 0} ${mobilePadding.left || 0}`}),\n            }}>\n                <InnerBlocks template={[\n                    ['core/heading', {level: 2, placeholder: 'Your Heading Here'}],\n                    ['core/paragraph', {placeholder: 'Your live content here.'}],\n                ]} templateLock={false}/>\n            </div>\n        </div>\n    )\n}\n\nexport function getFullDateLabel(value, dateSettings) {\n\n    const date = getDate(value);\n    let timezoneAbbreviation;\n\n    if (dateSettings.timezone.abbr && isNaN(Number(dateSettings.timezone.abbr))) {\n        timezoneAbbreviation = dateSettings.timezone.abbr;\n    } else {\n        const symbol = dateSettings.timezone.offset < 0 ? '' : '+';\n        timezoneAbbreviation = `UTC${symbol}${dateSettings.timezone.offset}`;\n    }\n\n    const formattedDate = dateI18n(_x('F j, Y g:i a', 'post schedule full date format'), date);\n\n    return `${formattedDate} ${timezoneAbbreviation}`;\n}\n\nexport function is12HourFormat(format) {\n    return /(?:^|[^\\\\])[aAgh]/.test(format);\n}","import { InnerBlocks } from '@wordpress/block-editor';\n\nexport default function save() {\n    return <InnerBlocks.Content />;\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"date\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\r\n */\r\nimport {registerBlockType} from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport meta                from './block.json';\r\nimport Edit                from './edit';\r\nimport save                from './save';\r\n\r\nregisterBlockType(meta.name, {\r\n    edit: Edit,\r\n    save,\r\n});\r\n"],"names":["__","_x","useEntityProp","useEffect","dateI18n","getDate","getSettings","getDateSettings","__experimentalBoxControl","BoxControl","BaseControl","Button","Dashicon","Dropdown","PanelBody","PanelRow","RangeControl","SelectControl","Tip","ToggleControl","__experimentalPublishDateTimePicker","PublishDateTimePicker","InnerBlocks","InspectorControls","PanelColorSettings","useBlockProps","Edit","props","attributes","setAttributes","liveDate","shadow","borderStyle","borderColor","darkBorderColor","borderWidth","borderRadius","buttonBorderRadius","background","darkBackground","desktopPadding","tabletPadding","mobilePadding","dateSettings","setAttribute","name","value","setDate","newDate","siteTimeFormat","formats","time","borderStyleOptions","label","wrapperClassName","innerClassName","blockProps","className","createElement","title","initialOpen","popoverProps","placement","renderToggle","isOpen","onToggle","variant","onClick","getFullDateLabel","renderContent","onClose","currentDate","onChange","is12Hour","is12HourFormat","group","options","help","Fragment","resetValues","top","right","bottom","left","values","colorSettings","step","max","min","checked","icon","style","template","level","placeholder","templateLock","date","timezoneAbbreviation","timezone","abbr","isNaN","Number","symbol","offset","formattedDate","format","test","save","Content","registerBlockType","meta","edit"],"sourceRoot":""}